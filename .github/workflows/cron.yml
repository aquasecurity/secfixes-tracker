name: Update secfixes tracker
on:
  schedule:
    - cron: "0 */6 * * *"
  workflow_dispatch:

jobs:
  update:
    name: Update
    runs-on: ubuntu-latest
    container:
      image: python:3.9-alpine
    env:
      FLASK_APP: secfixes_tracker
      SECFIXES_TRACKER_CONFIG: application.cfg

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Install system dependencies
        run: |
          apk add --no-cache alpine-sdk gcc musl-dev libc-dev apk-tools
          # Find actual libapk file and create unversioned symlink for Python ctypes
          LIBAPK_FILE=$(find /usr/lib /lib -name "libapk.so.*" 2>/dev/null | head -1)
          if [ -n "$LIBAPK_FILE" ]; then
            LIBAPK_DIR=$(dirname "$LIBAPK_FILE")
            ln -sf "$LIBAPK_FILE" "$LIBAPK_DIR/libapk.so"
            echo "Created libapk.so symlink: $LIBAPK_DIR/libapk.so -> $LIBAPK_FILE"
          else
            echo "ERROR: No libapk.so.* file found!"
            exit 1
          fi
          # Set library path for Python ctypes
          echo "LD_LIBRARY_PATH=/usr/lib:/lib" >> $GITHUB_ENV

      - name: Install Python dependencies
        run: pip3 install -r requirements.txt

      - name: Initialize DB
        run: flask init-db

      - name: Import APKINDEX
        run: flask import-apkindex

      - name: Import secfixes
        run: flask import-secfixes

      - name: Import NVD
        run: |
          # Import only recent NVD CVEs (last 2 years) to avoid importing entire historical database
          # This prevents the 3,652 â†’ 292,000+ CVE explosion
          CURRENT_YEAR=$(date "+%Y")
          PREVIOUS_YEAR=$((CURRENT_YEAR - 1))
          
          echo "=== Importing only recent CVEs (${PREVIOUS_YEAR}-${CURRENT_YEAR}) ==="
          echo "=== This prevents importing 292,000+ historical CVEs ==="
          
          for year in $(seq $PREVIOUS_YEAR $CURRENT_YEAR); do
            echo "=== Importing CVEs for year $year ==="
            flask import-nvd $year
            echo "=== Completed year $year ==="
          done
          echo "=== Recent years completed ==="
        env:
          NVD_API_KEY: ${{ secrets.NVD_API_KEY }}

      - name: Update states
        run: flask update-states

      - name: Clean existing files
        run: rm -rf data && mkdir data

      - name: Export JSON files
        run: flask export

      - name: Compress
        run: |
          tar cvfz all.tar.gz data
          mkdir -p public
          mv all.tar.gz public

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public
